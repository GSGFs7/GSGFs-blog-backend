services:
  django-web:
    build:
      context: .
      dockerfile: Dockerfile
      secrets:
        - hf_token
      args:
        - MODEL_NAME=${MODEL_NAME}
        - SENTENCE_TRANSFORMERS_HOME=${SENTENCE_TRANSFORMERS_HOME}
    # image: django
    container_name: django
    working_dir: /app
    mem_limit: 6G
    cpus: 2
    # 会导致找不到文件
    # volumes:
    #   - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    env_file:
      - .env
    environment:
      DEBUG: ${DEBUG}
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DJANGO_LOGLEVEL: ${DJANGO_LOGLEVEL}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      DATABASE_ENGINE: ${DATABASE_ENGINE}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
    networks:
      - app-network
    # watch 配置
    develop:
      watch:
        - action: sync
          path: .
          target: /app
          ignore:
            - .git/
            - .vevn
            - __pycache__/
        - action: rebuild
          path: requirements.txt

  db:
    image: pgvector/pgvector:pg17-trixie
    container_name: blog-db
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    # 不开放数据库端口
    # ports:
    #   - "5432:5432"
    networks:
      - app-network

  redis:
    image: redis:7
    container_name: blog-redis
    # ports:
    #   - "6379:6379"
    volumes:
      - redis_date:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

volumes:
  postgres_data:
    # external: true # 防止 docker compose down --volumes 删除这个卷
    name: postgres_data
  redis_date:

networks:
  app-network:
    driver: bridge

secrets:
  hf_token:
    environment: HUGGINGFACE_HUB_TOKEN
