name: Docker Image CI/CD

on:
  push:
    branches: ["main", "dev"]
    tags: ["v*"]
  # pull_request:
  #   branches: ["main"]

permissions:
  contents: write
  packages: read

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379

      db:
        image: pgvector/pgvector:pg17-trixie
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: github_action_test
          POSTGRES_USER: github_action_test_user
          POSTGRES_PASSWORD: github_action_test_password
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.13"

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh
          export PATH=$PATH:$HOME/.local/bin

      - name: Install dependencies
        run: uv sync
      
      - name: Run tests
        run: uv run python manage.py test
        env:
          DJANGO_SECRET_KEY: github-action-test-django-secret-key
          DATABASE_ENGINE: postgresql
          DATABASE_NAME: github_action_test
          DATABASE_USERNAME: github_action_test_user
          DATABASE_PASSWORD: github_action_test_password
          DATABASE_HOST: localhost
          DATABASE_PORT: 5432
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          MODEL_NAME: google/embeddinggemma-300m
          SENTENCE_TRANSFORMERS_HOME: sentence_transformers_models
          HUGGINGFACE_HUB_TOKEN: ${{ secrets.HUGGINGFACE_HUB_TOKEN }}


  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build the Docker image
        # use '--load' to load the image to the Docker daemon, otherwise will save a empty image
        run: |
          docker buildx build \
            --load \
            --secret id=hf_token,env=HUGGINGFACE_HUB_TOKEN \
            --build-arg MODEL_NAME=google/embeddinggemma-300m \
            --build-arg SENTENCE_TRANSFORMERS_HOME=sentence_transformers_models \
            -t django .
        env:
          HUGGINGFACE_HUB_TOKEN: ${{ secrets.HUGGINGFACE_HUB_TOKEN }}

      - name: Export Docker image
        run: |
          mkdir -p ./artifacts
          cd ./artifacts
          docker save django:latest | zstd -c -T0 -12 > 'django.tar.zst'
          sha256sum django.tar.zst > django.tar.zst.sha256

      - name: Upload artifacts
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        uses: actions/upload-artifact@v4
        with:
          name: docker-image-${{ github.sha }}
          path: ./artifacts
          retention-days: 7

      - name: Create Release
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./artifacts/django.tar.zst
            ./artifacts/django.tar.zst.sha256
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') }}
    steps:
      - name: Download artifact
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        uses: actions/download-artifact@v5
        with:
          name: docker-image-${{ github.sha }}
          path: ./artifacts

      - name: Download from release
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          mkdir -p ./artifacts
          gh release download ${GITHUB_REF#refs/tags/} -p "django.tar.zst" -D ./artifacts
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Copy Docker image to server
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "./artifacts/django.tar.zst"
          target: "/tmp"
          timeout: "600s"

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            zstd -d -c /tmp/artifacts/django.tar.zst | docker load
            docker compose -f ~/blog/docker-compose.yml down || true
            docker compose -f ~/blog/docker-compose.yml up -d
            rm /tmp/artifacts/django.tar.zst
